IncomingMessage {
    _readableState: ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: null,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: true,
        needReadable: false,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        emitClose: true,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: true,
        decoder: null,
        encoding: null
    },
    readable: true,
    _events: {},
    _eventsCount: 0,
    _maxListeners: undefined,
    socket: Socket {
        connecting: false,
        _hadError: false,
        _handle: TCP {
            reading: true,
            onread: [Function: onStreamRead],
            onconnection: null,
            _consumed: true,
            [Symbol(owner)]: [Circular]
        },
        _parent: null,
        _host: null,
        _readableState: ReadableState {
            objectMode: false,
            highWaterMark: 16384,
            buffer: BufferList { head: null, tail: null, length: 0 },
            length: 0,
            pipes: null,
            pipesCount: 0,
            flowing: true,
            ended: false,
            endEmitted: false,
            reading: true,
            sync: false,
            needReadable: true,
            emittedReadable: false,
            readableListening: false,
            resumeScheduled: false,
            emitClose: false,
            destroyed: false,
            defaultEncoding: 'utf8',
            awaitDrain: 0,
            readingMore: false,
            decoder: null,
            encoding: null
        },
        readable: true,
        _events: {
            end: [Array],
            drain: [Array],
            timeout: [Function: socketOnTimeout],
            data: [Function: bound socketOnData],
            error: [Function: socketOnError],
            close: [Array],
            resume: [Function: onSocketResume],
            pause: [Function: onSocketPause]
        },
        _eventsCount: 8,
        _maxListeners: undefined,
        _writableState: WritableState {
            objectMode: false,
            highWaterMark: 16384,
            finalCalled: false,
            needDrain: false,
            ending: false,
            ended: false,
            finished: false,
            destroyed: false,
            decodeStrings: false,
            defaultEncoding: 'utf8',
            length: 0,
            writing: false,
            corked: 0,
            sync: false,
            bufferProcessing: false,
            onwrite: [Function: bound onwrite],
            writecb: null,
            writelen: 0,
            bufferedRequest: null,
            lastBufferedRequest: null,
            pendingcb: 0,
            prefinished: false,
            errorEmitted: false,
            emitClose: false,
            bufferedRequestCount: 0,
            corkedRequestsFree: [Object]
        },
        writable: true,
        allowHalfOpen: true,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: Server {
            _events: [Object],
            _eventsCount: 4,
            _maxListeners: undefined,
            _connections: 6,
            _handle: [TCP],
            _usingWorkers: false,
            _workers: [],
            _unref: false,
            allowHalfOpen: true,
            pauseOnConnect: false,
            httpAllowHalfOpen: false,
            timeout: 120000,
            keepAliveTimeout: 5000,
            _pendingResponseData: 0,
            maxHeadersCount: null,
            _connectionKey: '6::::26',
            [Symbol(IncomingMessage)]: [Function],
            [Symbol(ServerResponse)]: [Function],
            [Symbol(asyncId)]: 5
        },
        _server: Server {
            _events: [Object],
            _eventsCount: 4,
            _maxListeners: undefined,
            _connections: 6,
            _handle: [TCP],
            _usingWorkers: false,
            _workers: [],
            _unref: false,
            allowHalfOpen: true,
            pauseOnConnect: false,
            httpAllowHalfOpen: false,
            timeout: 120000,
            keepAliveTimeout: 5000,
            _pendingResponseData: 0,
            maxHeadersCount: null,
            _connectionKey: '6::::26',
            [Symbol(IncomingMessage)]: [Function],
            [Symbol(ServerResponse)]: [Function],
            [Symbol(asyncId)]: 5
        },
        timeout: 120000,
        parser: HTTPParser {
            '0': [Function: parserOnHeaders],
            '1': [Function: parserOnHeadersComplete],
            '2': [Function: parserOnBody],
            '3': [Function: parserOnMessageComplete],
            '4': [Function: bound onParserExecute],
            _headers: [],
            _url: '',
            _consumed: true,
            socket: [Circular],
            incoming: [Circular],
            outgoing: null,
            maxHeaderPairs: 2000,
            onIncoming: [Function: bound parserOnIncoming]
        },
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: ServerResponse {
            _events: [Object],
            _eventsCount: 1,
            _maxListeners: undefined,
            output: [],
            outputEncodings: [],
            outputCallbacks: [],
            outputSize: 0,
            writable: true,
            _last: false,
            chunkedEncoding: false,
            shouldKeepAlive: true,
            useChunkedEncodingByDefault: true,
            sendDate: true,
            _removedConnection: false,
            _removedContLen: false,
            _removedTE: false,
            _contentLength: null,
            _hasBody: true,
            _trailer: '',
            finished: false,
            _headerSent: false,
            socket: [Circular],
            connection: [Circular],
            _header: null,
            _onPendingData: [Function: bound updateOutgoingData],
            _sent100: false,
            _expect_continue: false,
            req: [Circular],
            locals: {},
            [Symbol(isCorked)]: false,
            [Symbol(outHeadersKey)]: [Object]
        },
        [Symbol(asyncId)]: 13,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: Timeout {
            _called: false,
            _idleTimeout: 120000,
            _idlePrev: [TimersList],
            _idleNext: [Timeout],
            _idleStart: 3670,
            _onTimeout: [Function: bound],
            _timerArgs: undefined,
            _repeat: null,
            _destroyed: false,
            [Symbol(unrefed)]: true,
            [Symbol(asyncId)]: 635,
            [Symbol(triggerId)]: 16
        },
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
        connecting: false,
        _hadError: false,
        _handle: TCP {
            reading: true,
            onread: [Function: onStreamRead],
            onconnection: null,
            _consumed: true,
            [Symbol(owner)]: [Circular]
        },
        _parent: null,
        _host: null,
        _readableState: ReadableState {
            objectMode: false,
            highWaterMark: 16384,
            buffer: BufferList { head: null, tail: null, length: 0 },
            length: 0,
            pipes: null,
            pipesCount: 0,
            flowing: true,
            ended: false,
            endEmitted: false,
            reading: true,
            sync: false,
            needReadable: true,
            emittedReadable: false,
            readableListening: false,
            resumeScheduled: false,
            emitClose: false,
            destroyed: false,
            defaultEncoding: 'utf8',
            awaitDrain: 0,
            readingMore: false,
            decoder: null,
            encoding: null
        },
        readable: true,
        _events: {
            end: [Array],
            drain: [Array],
            timeout: [Function: socketOnTimeout],
            data: [Function: bound socketOnData],
            error: [Function: socketOnError],
            close: [Array],
            resume: [Function: onSocketResume],
            pause: [Function: onSocketPause]
        },
        _eventsCount: 8,
        _maxListeners: undefined,
        _writableState: WritableState {
            objectMode: false,
            highWaterMark: 16384,
            finalCalled: false,
            needDrain: false,
            ending: false,
            ended: false,
            finished: false,
            destroyed: false,
            decodeStrings: false,
            defaultEncoding: 'utf8',
            length: 0,
            writing: false,
            corked: 0,
            sync: false,
            bufferProcessing: false,
            onwrite: [Function: bound onwrite],
            writecb: null,
            writelen: 0,
            bufferedRequest: null,
            lastBufferedRequest: null,
            pendingcb: 0,
            prefinished: false,
            errorEmitted: false,
            emitClose: false,
            bufferedRequestCount: 0,
            corkedRequestsFree: [Object]
        },
        writable: true,
        allowHalfOpen: true,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: Server {
            _events: [Object],
            _eventsCount: 4,
            _maxListeners: undefined,
            _connections: 6,
            _handle: [TCP],
            _usingWorkers: false,
            _workers: [],
            _unref: false,
            allowHalfOpen: true,
            pauseOnConnect: false,
            httpAllowHalfOpen: false,
            timeout: 120000,
            keepAliveTimeout: 5000,
            _pendingResponseData: 0,
            maxHeadersCount: null,
            _connectionKey: '6::::26',
            [Symbol(IncomingMessage)]: [Function],
            [Symbol(ServerResponse)]: [Function],
            [Symbol(asyncId)]: 5
        },
        _server: Server {
            _events: [Object],
            _eventsCount: 4,
            _maxListeners: undefined,
            _connections: 6,
            _handle: [TCP],
            _usingWorkers: false,
            _workers: [],
            _unref: false,
            allowHalfOpen: true,
            pauseOnConnect: false,
            httpAllowHalfOpen: false,
            timeout: 120000,
            keepAliveTimeout: 5000,
            _pendingResponseData: 0,
            maxHeadersCount: null,
            _connectionKey: '6::::26',
            [Symbol(IncomingMessage)]: [Function],
            [Symbol(ServerResponse)]: [Function],
            [Symbol(asyncId)]: 5
        },
        timeout: 120000,
        parser: HTTPParser {
            '0': [Function: parserOnHeaders],
            '1': [Function: parserOnHeadersComplete],
            '2': [Function: parserOnBody],
            '3': [Function: parserOnMessageComplete],
            '4': [Function: bound onParserExecute],
            _headers: [],
            _url: '',
            _consumed: true,
            socket: [Circular],
            incoming: [Circular],
            outgoing: null,
            maxHeaderPairs: 2000,
            onIncoming: [Function: bound parserOnIncoming]
        },
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: ServerResponse {
            _events: [Object],
            _eventsCount: 1,
            _maxListeners: undefined,
            output: [],
            outputEncodings: [],
            outputCallbacks: [],
            outputSize: 0,
            writable: true,
            _last: false,
            chunkedEncoding: false,
            shouldKeepAlive: true,
            useChunkedEncodingByDefault: true,
            sendDate: true,
            _removedConnection: false,
            _removedContLen: false,
            _removedTE: false,
            _contentLength: null,
            _hasBody: true,
            _trailer: '',
            finished: false,
            _headerSent: false,
            socket: [Circular],
            connection: [Circular],
            _header: null,
            _onPendingData: [Function: bound updateOutgoingData],
            _sent100: false,
            _expect_continue: false,
            req: [Circular],
            locals: {},
            [Symbol(isCorked)]: false,
            [Symbol(outHeadersKey)]: [Object]
        },
        [Symbol(asyncId)]: 13,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: Timeout {
            _called: false,
            _idleTimeout: 120000,
            _idlePrev: [TimersList],
            _idleNext: [Timeout],
            _idleStart: 3670,
            _onTimeout: [Function: bound],
            _timerArgs: undefined,
            _repeat: null,
            _destroyed: false,
            [Symbol(unrefed)]: true,
            [Symbol(asyncId)]: 635,
            [Symbol(triggerId)]: 16
        },
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: false,
    headers: {
        host: '127.0.0.1:26',
        connection: 'keep-alive',
        accept: '*/*',
        'x-requested-with': 'XMLHttpRequest',
        'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.67 Safari/537.36',
        referer: 'http://127.0.0.1:26/Aspx/MemberModify.aspx?account=JIABO1006',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'zh-TW,zh-CN;q=0.9,zh;q=0.8,en-US;q=0.7,en;q=0.6',
        cookie: 'hblid=MkzcfD2oANQ6ckiI3m39N0H6bB661air; olfsk=olfsk9433774694722152; autoRefreshHistory=http%3A%2F%2F127.0.0.1%3A16%2Fmember%2FBonus%2FBonusLog%3Bfalse%3B1%2Chttp%3A%2F%2F127.0.0.1%3A16%2Fmember%2FBonus%2FBonusLog.html%3Btrue%3B1; mainTab18C894_TS111_cus_=%7B%22curr%22%3A%22Font_hyxgJIABO1006%22%2C%22tabs%22%3A%5B%7B%22id%22%3A%22Font_xianyousuoyouhuiyuan%22%2C%22title%22%3A%22Font_xianyousuoyouhuiyuan%22%2C%22ref%22%3A%22MemberList.aspx%3Fsort%3DFont_xianyousuoyouhuiyuan%22%7D%2C%7B%22id%22%3A%22Font_hyxgJIABO1006%22%2C%22title%22%3A%22Font_hyxg%22%2C%22ref%22%3A%22MemberModify.aspx%3Faccount%3DJIABO1006%22%2C%22acc%22%3A%22JIABO1006%22%7D%5D%7D'
    },
    rawHeaders: ['Host',
        '127.0.0.1:26',
        'Connection',
        'keep-alive',
        'Accept',
        '*/*',
        'X-Requested-With',
        'XMLHttpRequest',
        'User-Agent',
        'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.67 Safari/537.36',
        'Referer',
        'http://127.0.0.1:26/Aspx/MemberModify.aspx?account=JIABO1006',
        'Accept-Encoding',
        'gzip, deflate, br',
        'Accept-Language',
        'zh-TW,zh-CN;q=0.9,zh;q=0.8,en-US;q=0.7,en;q=0.6',
        'Cookie',
        'hblid=MkzcfD2oANQ6ckiI3m39N0H6bB661air; olfsk=olfsk9433774694722152; autoRefreshHistory=http%3A%2F%2F127.0.0.1%3A16%2Fmember%2FBonus%2FBonusLog%3Bfalse%3B1%2Chttp%3A%2F%2F127.0.0.1%3A16%2Fmember%2FBonus%2FBonusLog.html%3Btrue%3B1; mainTab18C894_TS111_cus_=%7B%22curr%22%3A%22Font_hyxgJIABO1006%22%2C%22tabs%22%3A%5B%7B%22id%22%3A%22Font_xianyousuoyouhuiyuan%22%2C%22title%22%3A%22Font_xianyousuoyouhuiyuan%22%2C%22ref%22%3A%22MemberList.aspx%3Fsort%3DFont_xianyousuoyouhuiyuan%22%7D%2C%7B%22id%22%3A%22Font_hyxgJIABO1006%22%2C%22title%22%3A%22Font_hyxg%22%2C%22ref%22%3A%22MemberModify.aspx%3Faccount%3DJIABO1006%22%2C%22acc%22%3A%22JIABO1006%22%7D%5D%7D'
    ],
    trailers: {},
    rawTrailers: [],
    aborted: false,
    upgrade: false,
    url: '/LoadData/AccountManagement/MemberModify.ashx?action=ThirdPlateSwitch&acc=JIABO1006&_=1540062720735',
    method: 'GET',
    statusCode: null,
    statusMessage: null,
    client: Socket {
        connecting: false,
        _hadError: false,
        _handle: TCP {
            reading: true,
            onread: [Function: onStreamRead],
            onconnection: null,
            _consumed: true,
            [Symbol(owner)]: [Circular]
        },
        _parent: null,
        _host: null,
        _readableState: ReadableState {
            objectMode: false,
            highWaterMark: 16384,
            buffer: BufferList { head: null, tail: null, length: 0 },
            length: 0,
            pipes: null,
            pipesCount: 0,
            flowing: true,
            ended: false,
            endEmitted: false,
            reading: true,
            sync: false,
            needReadable: true,
            emittedReadable: false,
            readableListening: false,
            resumeScheduled: false,
            emitClose: false,
            destroyed: false,
            defaultEncoding: 'utf8',
            awaitDrain: 0,
            readingMore: false,
            decoder: null,
            encoding: null
        },
        readable: true,
        _events: {
            end: [Array],
            drain: [Array],
            timeout: [Function: socketOnTimeout],
            data: [Function: bound socketOnData],
            error: [Function: socketOnError],
            close: [Array],
            resume: [Function: onSocketResume],
            pause: [Function: onSocketPause]
        },
        _eventsCount: 8,
        _maxListeners: undefined,
        _writableState: WritableState {
            objectMode: false,
            highWaterMark: 16384,
            finalCalled: false,
            needDrain: false,
            ending: false,
            ended: false,
            finished: false,
            destroyed: false,
            decodeStrings: false,
            defaultEncoding: 'utf8',
            length: 0,
            writing: false,
            corked: 0,
            sync: false,
            bufferProcessing: false,
            onwrite: [Function: bound onwrite],
            writecb: null,
            writelen: 0,
            bufferedRequest: null,
            lastBufferedRequest: null,
            pendingcb: 0,
            prefinished: false,
            errorEmitted: false,
            emitClose: false,
            bufferedRequestCount: 0,
            corkedRequestsFree: [Object]
        },
        writable: true,
        allowHalfOpen: true,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: Server {
            _events: [Object],
            _eventsCount: 4,
            _maxListeners: undefined,
            _connections: 6,
            _handle: [TCP],
            _usingWorkers: false,
            _workers: [],
            _unref: false,
            allowHalfOpen: true,
            pauseOnConnect: false,
            httpAllowHalfOpen: false,
            timeout: 120000,
            keepAliveTimeout: 5000,
            _pendingResponseData: 0,
            maxHeadersCount: null,
            _connectionKey: '6::::26',
            [Symbol(IncomingMessage)]: [Function],
            [Symbol(ServerResponse)]: [Function],
            [Symbol(asyncId)]: 5
        },
        _server: Server {
            _events: [Object],
            _eventsCount: 4,
            _maxListeners: undefined,
            _connections: 6,
            _handle: [TCP],
            _usingWorkers: false,
            _workers: [],
            _unref: false,
            allowHalfOpen: true,
            pauseOnConnect: false,
            httpAllowHalfOpen: false,
            timeout: 120000,
            keepAliveTimeout: 5000,
            _pendingResponseData: 0,
            maxHeadersCount: null,
            _connectionKey: '6::::26',
            [Symbol(IncomingMessage)]: [Function],
            [Symbol(ServerResponse)]: [Function],
            [Symbol(asyncId)]: 5
        },
        timeout: 120000,
        parser: HTTPParser {
            '0': [Function: parserOnHeaders],
            '1': [Function: parserOnHeadersComplete],
            '2': [Function: parserOnBody],
            '3': [Function: parserOnMessageComplete],
            '4': [Function: bound onParserExecute],
            _headers: [],
            _url: '',
            _consumed: true,
            socket: [Circular],
            incoming: [Circular],
            outgoing: null,
            maxHeaderPairs: 2000,
            onIncoming: [Function: bound parserOnIncoming]
        },
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: ServerResponse {
            _events: [Object],
            _eventsCount: 1,
            _maxListeners: undefined,
            output: [],
            outputEncodings: [],
            outputCallbacks: [],
            outputSize: 0,
            writable: true,
            _last: false,
            chunkedEncoding: false,
            shouldKeepAlive: true,
            useChunkedEncodingByDefault: true,
            sendDate: true,
            _removedConnection: false,
            _removedContLen: false,
            _removedTE: false,
            _contentLength: null,
            _hasBody: true,
            _trailer: '',
            finished: false,
            _headerSent: false,
            socket: [Circular],
            connection: [Circular],
            _header: null,
            _onPendingData: [Function: bound updateOutgoingData],
            _sent100: false,
            _expect_continue: false,
            req: [Circular],
            locals: {},
            [Symbol(isCorked)]: false,
            [Symbol(outHeadersKey)]: [Object]
        },
        [Symbol(asyncId)]: 13,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: Timeout {
            _called: false,
            _idleTimeout: 120000,
            _idlePrev: [TimersList],
            _idleNext: [Timeout],
            _idleStart: 3670,
            _onTimeout: [Function: bound],
            _timerArgs: undefined,
            _repeat: null,
            _destroyed: false,
            [Symbol(unrefed)]: true,
            [Symbol(asyncId)]: 635,
            [Symbol(triggerId)]: 16
        },
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0
    },
    _consuming: false,
    _dumped: false,
    next: [Function: next],
    baseUrl: '',
    originalUrl: '/LoadData/AccountManagement/MemberModify.ashx?action=ThirdPlateSwitch&acc=JIABO1006&_=1540062720735',
    _parsedUrl: Url {
        protocol: null,
        slashes: null,
        auth: null,
        host: null,
        port: null,
        hostname: null,
        hash: null,
        search: '?action=ThirdPlateSwitch&acc=JIABO1006&_=1540062720735',
        query: 'action=ThirdPlateSwitch&acc=JIABO1006&_=1540062720735',
        pathname: '/LoadData/AccountManagement/MemberModify.ashx',
        path: '/LoadData/AccountManagement/MemberModify.ashx?action=ThirdPlateSwitch&acc=JIABO1006&_=1540062720735',
        href: '/LoadData/AccountManagement/MemberModify.ashx?action=ThirdPlateSwitch&acc=JIABO1006&_=1540062720735',
        _raw: '/LoadData/AccountManagement/MemberModify.ashx?action=ThirdPlateSwitch&acc=JIABO1006&_=1540062720735'
    },
    params: { '0': '/LoadData/AccountManagement/MemberModify.ashx' },
    query: {
        action: 'ThirdPlateSwitch',
        acc: 'JIABO1006',
        _: '1540062720735'
    },
    res: ServerResponse {
        _events: { finish: [Function: bound resOnFinish] },
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: Socket {
            connecting: false,
            _hadError: false,
            _handle: [TCP],
            _parent: null,
            _host: null,
            _readableState: [ReadableState],
            readable: true,
            _events: [Object],
            _eventsCount: 8,
            _maxListeners: undefined,
            _writableState: [WritableState],
            writable: true,
            allowHalfOpen: true,
            _sockname: null,
            _pendingData: null,
            _pendingEncoding: '',
            server: [Server],
            _server: [Server],
            timeout: 120000,
            parser: [HTTPParser],
            on: [Function: socketOnWrap],
            _paused: false,
            _httpMessage: [Circular],
            [Symbol(asyncId)]: 13,
            [Symbol(lastWriteQueueSize)]: 0,
            [Symbol(timeout)]: Timeout {
                _called: false,
                _idleTimeout: 120000,
                _idlePrev: [TimersList],
                _idleNext: [Timeout],
                _idleStart: 3670,
                _onTimeout: [Function: bound],
                _timerArgs: undefined,
                _repeat: null,
                _destroyed: false,
                [Symbol(unrefed)]: true,
                [Symbol(asyncId)]: 635,
                [Symbol(triggerId)]: 16
            },
            [Symbol(kBytesRead)]: 0,
            [Symbol(kBytesWritten)]: 0
        },
        connection: Socket {
            connecting: false,
            _hadError: false,
            _handle: [TCP],
            _parent: null,
            _host: null,
            _readableState: [ReadableState],
            readable: true,
            _events: [Object],
            _eventsCount: 8,
            _maxListeners: undefined,
            _writableState: [WritableState],
            writable: true,
            allowHalfOpen: true,
            _sockname: null,
            _pendingData: null,
            _pendingEncoding: '',
            server: [Server],
            _server: [Server],
            timeout: 120000,
            parser: [HTTPParser],
            on: [Function: socketOnWrap],
            _paused: false,
            _httpMessage: [Circular],
            [Symbol(asyncId)]: 13,
            [Symbol(lastWriteQueueSize)]: 0,
            [Symbol(timeout)]: Timeout {
                _called: false,
                _idleTimeout: 120000,
                _idlePrev: [TimersList],
                _idleNext: [Timeout],
                _idleStart: 3670,
                _onTimeout: [Function: bound],
                _timerArgs: undefined,
                _repeat: null,
                _destroyed: false,
                [Symbol(unrefed)]: true,
                [Symbol(asyncId)]: 635,
                [Symbol(triggerId)]: 16
            },
            [Symbol(kBytesRead)]: 0,
            [Symbol(kBytesWritten)]: 0
        },
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: { 'x-powered-by': [Array] }
    },
    body: {},
    secret: undefined,
    cookies: {
        hblid: 'MkzcfD2oANQ6ckiI3m39N0H6bB661air',
        olfsk: 'olfsk9433774694722152',
        autoRefreshHistory: 'http://127.0.0.1:16/member/Bonus/BonusLog;false;1,http://127.0.0.1:16/member/Bonus/BonusLog.html;true;1',
        mainTab18C894_TS111_cus_: '{"curr":"Font_hyxgJIABO1006","tabs":[{"id":"Font_xianyousuoyouhuiyuan","title":"Font_xianyousuoyouhuiyuan","ref":"MemberList.aspx?sort=Font_xianyousuoyouhuiyuan"},{"id":"Font_hyxgJIABO1006","title":"Font_hyxg","ref":"MemberModify.aspx?account=JIABO1006","acc":"JIABO1006"}]}'
    },
    signedCookies: {},
    route: Route {
        path: '*',
        stack: [
            [Layer],
            [Layer],
            [Layer],
            [Layer],
            [Layer],
            [Layer],
            [Layer],
            [Layer],
            [Layer],
            [Layer],
            [Layer],
            [Layer],
            [Layer],
            [Layer],
            [Layer],
            [Layer],
            [Layer],
            [Layer],
            [Layer],
            [Layer],
            [Layer],
            [Layer],
            [Layer],
            [Layer],
            [Layer],
            [Layer],
            [Layer],
            [Layer],
            [Layer],
            [Layer],
            [Layer],
            [Layer],
            [Layer],
            [Layer]
        ],
        methods: {
            acl: true,
            bind: true,
            checkout: true,
            connect: true,
            copy: true,
            delete: true,
            get: true,
            head: true,
            link: true,
            lock: true,
            'm-search': true,
            merge: true,
            mkactivity: true,
            mkcalendar: true,
            mkcol: true,
            move: true,
            notify: true,
            options: true,
            patch: true,
            post: true,
            propfind: true,
            proppatch: true,
            purge: true,
            put: true,
            rebind: true,
            report: true,
            search: true,
            source: true,
            subscribe: true,
            trace: true,
            unbind: true,
            unlink: true,
            unlock: true,
            unsubscribe: true
        }
    }
}